#chat-screen {
    background-color: #abc1d1;
    height: 500vh;
}

#chat-screen .alt-header,
#chat-screen .status-bar {
    top: 0;
    position: fixed;
    width: 100%;
    background-color: #abc1d1;
    box-sizing: border-box;/* 화면에서 안보이는 경우에 설정하는 법 */
}
/* 어떤 요소를 고정하면 이전의 box들과는 다른 layer가 됨 */

#chat-screen .status-bar {
    z-index: 2;
}
/* z-index는 layer의 순서를 나타냄 (큰 값이 가장 위쪽에 존재) */

#chat-screen .alt-header {
    top: 10px;
    z-index: 1;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: none;
    }
    1% {
        opacity: 0;
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: none;
    }
}

.main-chat {
    margin-top: 120px;
    display: flex;
    flex-direction: column;
    /* 요소들 위아래 정렬 */
    align-items: center;
    /* flex-direction column으로 인해 크로스 축이 세로축 => 세로축을 가운데 정렬 */
    animation: fadeIn 0.8s linear;
}

.chat__timestamp {
    color: white;
    background-color: #92a4b2;
    padding: 15px;
    font-size: 14px;
    border-radius: 25px;
    margin-bottom: 25px;
}

.message-row {
    width: 100%;
    display: flex;
    /* 요소들이 옆으로 오게 만듦 */
    margin-bottom: 25px;
}

.message-row img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-right: 10px;
}

.message__author {
    margin-bottom: 5px;
    display: block;
    /* span 이라서 block으로 지정해야 마진이 적용됨 */
}

.message__info {
    display: flex;
    align-items: flex-end;
}

.message__bubble {
    background-color: white;
    padding: 13px;
    font-size: 18px;
    border-radius: 15px;
    border-top-left-radius: 0px;
    /* 순서에 영향있으니 주의할 것 */
    margin-right: 5px;
}

.message__time,
.message__author {
    opacity: 0.8;
    font-size: 14px;
}

.message-row--own {
    justify-content: flex-end;
    /* 수평으로 적용됨 */
}

.message-row--own .message__bubble {
    background-color: var(--yellow);
    border-top-right-radius: 0px;
    border-top-left-radius: 15px;
    margin-right: 0px;
    margin-left: 5px;
}


.message-row--own .message__info {
    flex-direction: row-reverse;
} /* father이 flex 요소를 가져서 가능함 */

/* 위의 row-reverse보다 조금 복잡하지만 순서를 바꿀 수 있는 방법
 -> flex의 children은 order을 사용할 수 있음 

.message-row--own .message__bubble {
    order: 1;
}

.message-row--own .message__time {
    order: 0;
} */

.reply {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: white;
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    box-sizing: border-box;
    align-items: center;
}

.reply .reply__column:first-child {
    width: 10%;
}

.reply .reply__column:last-child {
    width: 90%;
    position: relative;
}

.reply input {
    height: 30px;
    width: 100%;
    /* column에 먼저 width를 줘야 input에 width 사용 가능 */
    border: var(--main-border);
    border-radius: 25px;
    transition: all 0.3s ease-in-out;
}

.reply input::placeholder {
    padding-left: 5px;
}

.reply__column:last-child > i,
.reply__column:last-child button {
    position: absolute;
    right: -3px;
    top: 2px;
}

.reply__column:last-child > i {
    right: 40px;
    top: 10px;
}
/* >은 direct인 i에만 적용하는 방법 */

.reply i {
    opacity: 0.5;
}

.reply__column button {
    background-color: var(--yellow);
    border: none;
    width: 30px;
    height: 30px;
    border-radius: 50%;
}

.reply__column button i {
    opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
    outline: none;
}

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
    transition: opacity 0.3s ease-in-out;
}

/* focus-within은 reply 내부에 어떤 element가 focus되어 있다면 이라는 뜻 */
.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
    opacity: 0;
}

.reply:focus-within input {
    width: 96vw;
    transform: translateX(-12%) translateY(-80px);
}

.reply:focus-within {
    transform: translateY(80px);
}